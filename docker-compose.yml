
services:
  pipeline:
    build: 
      context: ./pipeline
      dockerfile: /Dockerfile
    environment:
      CONTAINER_RUNNING: 1
      TZ: America/New_York
    volumes:
      - ./pipeline:/app

    command: python main.py
    stdin_open: true
    tty: true

    depends_on:
      cbbdb:
        condition: service_healthy

  visualizer:
    image: metabase/metabase:latest
    depends_on:
      cbbdb:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${METABASE_POSTGRES_DB}
      MB_DB_HOST: cbbdb
      MB_DB_USER: ${METABASE_POSTGRES_USER}
      MB_DB_PASS: ${METABASE_POSTGRES_PASSWORD}

  cbbdb:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      TZ: America/New_York
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      METABASE_POSTGRES_DB: ${METABASE_POSTGRES_DB}
      METABASE_POSTGRES_USER: ${METABASE_POSTGRES_USER}
      METABASE_POSTGRES_PASSWORD: ${METABASE_POSTGRES_USER}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - ./pgdata:/var/lib/postgresql/data/
      - ./pginit:/docker-entrypoint-initdb.d/